plugins {
    id 'eclipse'
    id 'idea'
    id 'maven-publish'
    id 'net.minecraftforge.gradle' version '[6.0,6.2)'
    id 'org.spongepowered.mixin' version '0.7.+'
    id 'com.github.johnrengelman.shadow' version '7.1.0'
}

version = mod_version
group = mod_group_id

base {
    archivesName = mod_id
}

shadowJar {
    configurations = [project.configurations.shadow]
}

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

println "Java: ${System.getProperty 'java.version'}, JVM: ${System.getProperty 'java.vm.version'} (${System.getProperty 'java.vendor'}), Arch: ${System.getProperty 'os.arch'}"
minecraft {
    mappings channel: mapping_channel, version: mapping_version

    copyIdeResources = true

    runs {
        configureEach {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'

            mods {
                "${mod_id}" {
                    source sourceSets.main
                }
            }
        }

        client {
            property 'forge.enabledGameTestNamespaces', mod_id
        }

        server {
            property 'forge.enabledGameTestNamespaces', mod_id
            args '--nogui'
        }

        gameTestServer {
            property 'forge.enabledGameTestNamespaces', mod_id
        }

        data {
            workingDirectory project.file('run-data')

            args '--mod', mod_id, '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')
        }
    }
}

sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
    maven { url "https://maven.shedaniel.me/" }
    maven { url "https://maven.latticg.com/" }
    maven { url "https://maven.seedfinding.com/" }
    maven { url "https://maven-snapshots.seedfinding.com/" }
    maven { url "https://jitpack.io" }
    maven { url = 'https://maven.minecraftforge.net/' }
}

dependencies {
    minecraft "net.minecraftforge:forge:${minecraft_version}-${forge_version}"
    annotationProcessor 'org.spongepowered:mixin:0.8.5:processor'

    implementation "me.shedaniel.cloth:cloth-config-forge:11.1.106"

    implementation('com.seedfinding:mc_math:[1.171.0]')
    implementation('com.seedfinding:mc_seed:[1.171.2]')
    implementation('com.seedfinding:mc_core:[1.200.0]')
    implementation('com.seedfinding:mc_noise:[1.171.1]')
    implementation('com.seedfinding:mc_biome:[1.171.1]')
    implementation('com.seedfinding:mc_terrain:[1.171.1]')
    implementation('com.seedfinding:mc_feature:[1.171.7]')
    implementation('com.seedfinding:mc_reversal:[1.171.1]')
    implementation('com.seedfinding:latticg:[1.06]')

    shadow('com.seedfinding:mc_math:[1.171.0]')
    shadow('com.seedfinding:mc_seed:[1.171.2]')
    shadow('com.seedfinding:mc_core:[1.200.0]')
    shadow('com.seedfinding:mc_noise:[1.171.1]')
    shadow('com.seedfinding:mc_biome:[1.171.1]')
    shadow('com.seedfinding:mc_terrain:[1.171.1]')
    shadow('com.seedfinding:mc_feature:[1.171.7]')
    shadow('com.seedfinding:mc_reversal:[1.171.1]')
    shadow('com.seedfinding:latticg:[1.06]')
}

tasks.named('processResources', ProcessResources).configure {
    var replaceProperties = [
            minecraft_version: minecraft_version, minecraft_version_range: minecraft_version_range,
            forge_version: forge_version, forge_version_range: forge_version_range,
            loader_version_range: loader_version_range,
            mod_id: mod_id, mod_name: mod_name, mod_license: mod_license, mod_version: mod_version,
            mod_authors: mod_authors, mod_description: mod_description,
    ]
    inputs.properties replaceProperties

    filesMatching(['META-INF/mods.toml', 'pack.mcmeta']) {
        expand replaceProperties + [project: project]
    }
}

tasks.named('jar', Jar).configure {
    manifest {
        attributes([
                'Specification-Title'     : mod_id,
                'Specification-Vendor'    : mod_authors,
                'Specification-Version'   : '1', // We are version 1 of ourselves
                'Implementation-Title'    : project.name,
                'Implementation-Version'  : project.jar.archiveVersion,
                'Implementation-Vendor'   : mod_authors,
                'Implementation-Timestamp': new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }

    finalizedBy 'reobfJar'
}
publishing {
    publications {
        register('mavenJava', MavenPublication) {
            artifact tasks.shadowJar
        }
    }
    repositories {
        maven {
            url "file://${project.projectDir}/mcmodsrepo"
        }
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}

mixin {
    config 'seedcracker.mixins.json'
}

